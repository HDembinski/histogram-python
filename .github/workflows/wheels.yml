name: Wheels

on: [push, pull_request]

env:
  CIBW_TEST_EXTRAS: test
  CIBW_TEST_COMMAND: pytest {project}/tests
  CIBW_BUILD_VERBOSITY: 1


jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - name: Setup Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'

    - name: Install deps
      run: python -m pip install "setuptools>=42" "setuptools_scm[toml]>=4.1.0"

    - name: Build SDist
      run: python setup.py sdist

    - uses: actions/upload-artifact@v2
      with:
        path: dist/*.tar.gz


  build_wheels:
    name: ${{ matrix.type }} wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, windows-latest, macos-latest]
        type: [Standard]

        include:
          - type: Standard
            CIBW_MANYLINUX_X86_64_IMAGE: manylinux2010
            CIBW_MANYLINUX_I686_IMAGE: manylinux2010

          - os: ubuntu-18.04
            type: ManyLinux1
            CIBW_MANYLINUX_X86_64_IMAGE: skhep/manylinuxgcc-x86_64
            CIBW_MANYLINUX_I686_IMAGE: skhep/manylinuxgcc-i686

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - name: Setup Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'

    - name: Install cibuildwheel
      run: python -m pip install cibuildwheel==1.4.2

    - name: Build wheel
      run: python -m cibuildwheel --output-dir wheelhouse
      env:
        CIBW_SKIP: pp* cp27-win* cp35-win* cp35-mac*
        CIBW_MANYLINUX_I686_IMAGE: ${{ matrix.CIBW_MANYLINUX_I686_IMAGE }}
        CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.CIBW_MANYLINUX_X86_64_IMAGE }}

    - name: Show files
      run: ls -lh wheelhouse
      shell: bash

    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        path: wheelhouse/*.whl


  # Windows 2.7 (requires PyBind11 workaround)
  build_win27_wheels:
    name: Py 2.7 wheels on Windows
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - uses: actions/setup-python@v2
      with:
        python-version: '3.7'

    - name: Install cibuildwheel
      run: python -m pip install cibuildwheel==1.4.2

    - uses: ilammy/msvc-dev-cmd@v1

    - name: Build 64-bit wheel
      run: python -m cibuildwheel --output-dir wheelhouse
      env:
        CIBW_BUILD: cp27-win_amd64
        DISTUTILS_USE_SDK: 1
        MSSdk: 1

    - uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x86

    - name: Build 32-bit wheel
      run: python -m cibuildwheel --output-dir wheelhouse
      env:
        CIBW_BUILD: cp27-win32
        DISTUTILS_USE_SDK: 1
        MSSdk: 1

    - name: Show files
      run: ls -lh wheelhouse
      shell: bash

    - uses: actions/upload-artifact@v2
      with:
        path: wheelhouse/*.whl


  upload_all:
    name: Upload if release
    needs: [build_wheels, build_win27_wheels, build_sdist]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/setup-python@v2
      with:
        python-version: "3.8"

    - name: Install dependencies
      run: python -m pip install twine "setuptools>=42" "setuptools_scm[toml]>=4.1.0"

    - uses: actions/download-artifact@v2
      with:
        name: artifact
        path: dist

    - name: Print contents
      run: |
        ls -lh dist
        echo "---"
        ls -lh dist/*

    - run: twine check dist/*

    - uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
      if: github.event_name == 'release' && github.event.action == 'published'
